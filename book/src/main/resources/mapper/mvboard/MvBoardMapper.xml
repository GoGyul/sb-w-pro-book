<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sp.web.book.board.movie.mapper.MvBoardMapper">

    <select id="selectMvBoardList"  resultType="com.sp.web.book.board.movie.model.entity.MvBoardEntity">
        SELECT
            mvb.bno
             , mvb.title
             , mvb.content
             , mvb.user_id
             , mvb.category
             , mvb.movie_title
             , mvb.views
             , mvb.rating
             , mvb.regdate
             , mvb.updatedate
             , mvb.is_deleted
             , mvu.nickname
         FROM mv_board mvb
         JOIN mv_user mvu
           ON mvb.user_id = mvu.user_id
        ORDER BY mvb.bno desc
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="selectTotalCount" resultType="long">
        SELECT COUNT(*)
          FROM mv_board
    </select>

    <insert id="insertMvBoard" parameterType="com.sp.web.book.board.movie.model.dto.MvBoardDto">
        INSERT INTO mv_board (
            title,
            category,
            rating,
            movie_title,
            content,
            user_id,
            regdate,
            updatedate,
            is_deleted,
            views
        ) VALUES (
                     #{title},
                     #{category},
                     #{rating},
                     #{movieTitle},
                     #{content},
                     #{userId},
                     NOW(),
                     NOW(),
                     0,
                     0
                 )
    </insert>

    <select id="selectMvBoardDetail" resultType="com.sp.web.book.board.movie.model.dto.MvBoardDetailReponseDto">
        SELECT
            mvb.bno,
            mvb.title,
            mvb.content,
            mvb.user_id,
            mvb.regdate,
            mvb.updatedate,
            mvb.category,
            mvb.movie_title,
            mvb.rating,
            mvb.is_deleted,
            mvb.views,
            mvu.nickname
        FROM mv_board mvb
        JOIN mv_user mvu
          ON mvb.user_id = mvu.user_id
        WHERE mvb.bno = #{bno}
    </select>

    <update id="increaseViews" parameterType="int">
        UPDATE mv_board
        SET views = views + 1
        WHERE bno = #{bno}
    </update>

</mapper>
